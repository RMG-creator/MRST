function model = getSequentialModelFromFI(fimodel, varargin)
% For a given fully implicit model, output the corresponding pressure/transport model 
    if isa(fimodel, 'SequentialPressureTransportModel')
        % User gave us a sequential model! We do not know why, but in that
        % case we just return it straight back.
        model = fimodel;
        return
    end
    rock  = fimodel.rock;
    fluid = fimodel.fluid;
    G     = fimodel.G;
    
    switch lower(class(fimodel))
        case 'twophaseoilwatermodel'
            pressureModel  = PressureOilWaterModel(G, rock, fluid, ...
                                                    'oil',   fimodel.oil, ...
                                                    'water', fimodel.water);
            transportModel = TransportOilWaterModel(G, rock, fluid, ...
                                                    'oil',   fimodel.oil, ...
                                                    'water', fimodel.water);
        case 'threephaseblackoilmodel'
            pressureModel  = PressureBlackOilModel(G, rock, fluid, ...
                                                    'oil',    fimodel.oil, ...
                                                    'water',  fimodel.water, ...
                                                    'gas',    fimodel.gas, ...
                                                    'disgas', fimodel.disgas, ...
                                                    'vapoil', fimodel.vapoil ...
                                                );
            transportModel = TransportBlackOilModel(G, rock, fluid, ...
                                                    'oil',    fimodel.oil, ...
                                                    'water',  fimodel.water, ...
                                                    'gas',    fimodel.gas, ...
                                                    'disgas', fimodel.disgas, ...
                                                    'vapoil', fimodel.vapoil ...
                                                    );
        case 'threephasecompositionalmodel'
            eos = fimodel.EOSModel;
            pressureModel = PressureCompositionalModel(G, rock, fimodel.fluid, eos.fluid, ...
                'water', fimodel.water);
            transportModel = TransportCompositionalModel(G, rock, fimodel.fluid, eos.fluid, ...
                'water', fimodel.water);

            pressureModel.EOSModel = eos;
            transportModel.EOSModel = eos;
            
        otherwise
            error('mrst:getSequentialModelFromFI', ...
            ['Sequential model not implemented for ''' class(fimodel), '''']);
    end
    pressureModel.operators = fimodel.operators;
    transportModel.operators = fimodel.operators;
    
    model = SequentialPressureTransportModel(pressureModel, transportModel, varargin{:});
end
